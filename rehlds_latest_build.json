{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY Jexactyl PANEL - jexactyl.com",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2024-10-25T19:05:01+02:00",
    "name": "ReHLDS linux build",
    "author": "goranevol@gmail.com",
    "description": "Counter-Strike 1.6 Steam server egg.\r\nCounter-Strike: 1.6 is a multiplayer first-person shooter video game developed by Valve Corporation.",
    "features": null,
    "docker_images": {
        "ghcr.io\/pterodactyl\/games:source": "ghcr.io\/pterodactyl\/games:source"
    },
    "file_denylist": [],
    "startup": ".\/hlds_run -game cstrike  -pidfile -{{SRV_SECURE}} +sv_lan 0 +ip 0.0.0.0 +port {{SERVER_PORT}} +maxplayers {{SRV_SLOTS}} +map {{SRV_STARTMAP}} -targetfps {{SRV_FPS}} -norestart",
    "config": {
        "files": "{\r\n    \"cstrike\/server.cfg\": {\r\n        \"parser\": \"file\",\r\n        \"find\": {\r\n            \"hostname\": \"hostname \\\"{{server.build.env.SRV_NAME}}\\\"\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \"Connection to Steam servers successful\",\r\n    \"userInteraction\": []\r\n}",
        "logs": "{\r\n    \"custom\": true,\r\n    \"location\": \"debug.log\"\r\n}",
        "stop": "quit"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n# SRCDS Base Installation Script\r\n#\r\n# Install required packages\r\ndpkg --add-architecture i386\r\napt -y update\r\napt -y install curl wget file tar bzip2 gzip jq unzip ca-certificates lib32gcc-s1 lib32stdc++6\r\napt-get clean\r\nrm -rf \/mnt\/server\r\n\r\n# Create server files directory and download game files\r\nmkdir -p \/mnt\/server\/\r\ncd \/mnt\/server || exit\r\nwget http:\/\/url.com\/csbuild\/rehlds_linux_server.zip\r\nif [[ $? -ne 0 ]]; then\r\n    echo \"Failed to download rehlds_linux_server.zip\"\r\n    exit 1\r\nfi\r\nunzip -q -o rehlds_linux_server.zip\r\nrm rehlds_linux_server.zip\r\n\r\n# Define function to download and install a GitHub release\r\nfunction install_github_release {\r\n  local repo=\"$1\"\r\n  local match=\"$2\"\r\n  local version=\"$3\"\r\n  local latest_json\r\n  local releases\r\n  local download_url\r\n\r\n  latest_json=$(curl --silent \"https:\/\/api.github.com\/repos\/$repo\/releases\/latest\")\r\n  releases=$(curl --silent \"https:\/\/api.github.com\/repos\/$repo\/releases\")\r\n\r\n  if [[ -z \"$version\" || \"$version\" == \"latest\" ]]; then\r\n    download_url=$(echo \"$latest_json\" | jq -r '.assets[].browser_download_url' | grep -i \"$match\")\r\n  else\r\n    local version_check\r\n    version_check=$(echo \"$releases\" | jq -r --arg version \"$version\" '.[] | select(.tag_name==$version) | .tag_name')\r\n    if [[ \"$version\" == \"$version_check\" ]]; then\r\n      download_url=$(echo \"$releases\" | jq -r --arg version \"$version\" '.[] | select(.tag_name==$version) | .assets[].browser_download_url' | grep -Ei \"$match\")\r\n    else\r\n      echo \"Unable to find release for version $version. Using latest release.\"\r\n      download_url=$(echo \"$latest_json\" | jq -r '.assets[].browser_download_url' | grep -i \"$match\")\r\n    fi\r\n  fi\r\n\r\n  cd \/tmp || exit\r\n  wget -N \"$download_url\" -O \"${match}.zip\"\r\n  if [[ $? -ne 0 ]]; then\r\n      echo \"Failed to download $download_url\"\r\n      exit 1\r\n  fi\r\n  unzip -q -o \"${match}.zip\"\r\n  cp -r \/tmp\/bin\/linux32\/* \/mnt\/server\r\n}\r\n\r\n# Check if INSTALL_COMPONENTS is not empty before installation\r\nif [[ -n \"$INSTALL_COMPONENTS\" ]]; then\r\n    # Install ReHLDS if specified\r\n    if [[ \"$INSTALL_COMPONENTS\" == *\"rehlds\"* ]]; then\r\n        install_github_release \"dreamstalker\/rehlds\" \"rehlds-bin\" \"$VERSION\"\r\n    fi\r\n\r\n    # Install ReGameDLL if specified\r\n    if [[ \"$INSTALL_COMPONENTS\" == *\"regamedll\"* ]]; then\r\n        install_github_release \"s1lentq\/ReGameDLL_CS\" \"regamedll-bin\" \"$GAME_VERSION\"\r\n        cp -r \/tmp\/bin\/linux32\/cstrike\/* \/mnt\/server\/cstrike\r\n    fi\r\n\r\n    # Install ReAPI if specified\r\n    if [[ \"$INSTALL_COMPONENTS\" == *\"reapi\"* ]]; then\r\n        install_github_release \"s1lentq\/reapi\" \"reapi-bin\" \"$REAPI_VERSION\"\r\n        cp -r \/tmp\/addons\/amxmodx\/modules\/* \/mnt\/server\/cstrike\/addons\/amxmodx\/modules\r\n    fi\r\nfi\r\n\r\n# Set permissions and environment variables\r\ncd \/mnt\/server || exit\r\nchown -R root:root \/mnt\r\nchmod +x hlds_run\r\nchmod +x hlds_linux\r\nexport HOME=\/mnt\/server\r\nexport LD_LIBRARY_PATH=\/lib\/i386-linux-gnu:$LD_LIBRARY_PATH\r\n\r\nmkdir -p .steam\/sdk64\r\ncp -v linux64\/steamclient.so .steam\/sdk64\/steamclient.so\r\n\r\n# Set up 32-bit libraries\r\nmkdir -p .steam\/sdk32\r\ncp -v linux32\/steamclient.so .steam\/sdk32\/steamclient.so\r\n\r\n# Clean up temporary files\r\nrm -rf \/tmp\/bin \/tmp\/*.zip\r\n\r\necho \"Installation complete\"",
            "container": "debian:12",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "Secure or Insecure",
            "description": "",
            "env_variable": "SRV_SECURE",
            "default_value": "secure",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:7",
            "field_type": "text"
        },
        {
            "name": "Server Name",
            "description": "Set server name",
            "env_variable": "SRV_NAME",
            "default_value": "Counter-Strike 1.6 Server",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:100",
            "field_type": "text"
        },
        {
            "name": "Max Players (Slots)",
            "description": "Max players allowed",
            "env_variable": "SRV_SLOTS",
            "default_value": "32",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|integer|between:1,32",
            "field_type": "text"
        },
        {
            "name": "Map",
            "description": "The default map for the server.",
            "env_variable": "SRV_STARTMAP",
            "default_value": "de_dust2",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|alpha_dash",
            "field_type": "text"
        },
        {
            "name": "Target FPS",
            "description": "Set server fps",
            "env_variable": "SRV_FPS",
            "default_value": "1150",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "ReHLDS Version",
            "description": "The version of ReHLDS to install, or 'latest' for the latest release.",
            "env_variable": "VERSION",
            "default_value": "latest",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "ReGameDLL Version",
            "description": "The version of ReGameDLL to install, or 'latest' for the latest release.",
            "env_variable": "GAME_VERSION",
            "default_value": "latest",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "ReAPI Version",
            "description": "The version of ReAPI to install, or 'latest' for the latest release.",
            "env_variable": "REAPI_VERSION",
            "default_value": "latest",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "Components to Install",
            "description": "Set to 'ReHLDS, ReGameDLL, ReAPI or NONE' to install respective components.",
            "env_variable": "INSTALL_COMPONENTS",
            "default_value": "rehlds, regamedll, reapi",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string",
            "field_type": "text"
        }
    ]
}

